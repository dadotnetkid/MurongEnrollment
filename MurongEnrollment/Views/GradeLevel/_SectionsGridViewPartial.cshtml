@{
    var grid = Html.DevExpress().GridView(settings =>
    {
        settings.Name = "SectionsGridView";
        settings.Width = Unit.Percentage(100);

        settings.CallbackRouteValues = new { Controller = "GradeLevel", Action = "SectionsGridViewPartial" };

        settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "GradeLevel", Action = "SectionsGridViewPartialAddNew" };
        settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "GradeLevel", Action = "SectionsGridViewPartialUpdate" };
        settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "GradeLevel", Action = "SectionsGridViewPartialDelete" };
        settings.SettingsEditing.Mode = GridViewEditingMode.EditFormAndDisplayRow;
        settings.SettingsBehavior.ConfirmDelete = true;

        settings.CommandColumn.Visible = true;
        settings.CommandColumn.ShowNewButtonInHeader = true;
        settings.CommandColumn.ShowDeleteButton = false;
        settings.CommandColumn.ShowEditButton = true;

        settings.KeyFieldName = "Id";

        settings.SettingsPager.Visible = true;
        settings.Settings.ShowGroupPanel = true;
        settings.Settings.ShowFilterRow = true;
        settings.SettingsBehavior.AllowSelectByRowClick = true;

        settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.Off;
        settings.SettingsAdaptivity.AdaptiveColumnPosition = GridViewAdaptiveColumnPosition.Right;
        settings.SettingsAdaptivity.AdaptiveDetailColumnCount = 1;
        settings.SettingsAdaptivity.AllowOnlyOneAdaptiveDetailExpanded = false;
        settings.SettingsAdaptivity.HideDataCellsAtWindowInnerWidth = 0;

        settings.Columns.Add(col=> {
            col.FieldName = "SectionName";
            col.SortOrder = DevExpress.Data.ColumnSortOrder.Ascending;
        });
        settings.Columns.Add(col =>
        {
            col.ColumnType = MVCxGridViewColumnType.ComboBox;
            col.FieldName = "GradeLevels.GradeLevel";
            col.GroupIndex = 0;
            col.SortOrder = DevExpress.Data.ColumnSortOrder.Ascending;
            col.SetEditItemTemplateContent(e =>
            {
                Html.DevExpress().ComboBox(cbo =>
                {
                    cbo.Name = "GradeLevelId";
                    cbo.Properties.TextField = "GradeLevel";
                    cbo.Properties.ValueField = "Id";

                }).BindList(new UnitOfWork().GradelevelRepo.Get().OrderBy(m=>m.GradeLevel)).Bind(DataBinder.Eval(e.DataItem, "GradeLevelId")).GetHtml();
            });

        });
    });
    if (ViewData["EditError"] != null)
    {
        grid.SetEditErrorText((string)ViewData["EditError"]);
    }
}
@grid.Bind(Model).GetHtml()